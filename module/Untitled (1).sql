CREATE TABLE IF NOT EXISTS Users(
  id INT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(30) UNIQUE NOT NULL,
  email VARCHAR(40) UNIQUE NOT NULL,
  password TEXT NOT NULL,
  image_url TEXT DEFAULT NULL,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Category(
  id INT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(30) UNIQUE NOT NULL,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Product(
  id INT PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL,
  category_id INT NOT NULL,
  name VARCHAR(255) NOT NULL UNIQUE,
  stock INT NOT NULL,
  price DECIMAL(10,2) NOT NULL,
  description TEXT NOT NULL, 
  image_url TEXT NOT NULL,
  rating INT DEFAULT 0,
  commission_rate DECIMAL(10,2) NOT NULL,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
  FOREIGN KEY (category_id) REFERENCES Category(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS Save_product(
  id INT PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL,
  product_id INT NOT NULL,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE,
  FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Cart(
  id INT PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL,
  is_paid BOOLEAN default false,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Cart_item(
  id INT PRIMARY KEY AUTO_INCREMENT,
  cart_id INT NOT NULL,
  product_id INT,
  quantity INT,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (cart_id) REFERENCES Cart(id) ON DELETE CASCADE,
  FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Payment(
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    cart_id INT NOT NULL,
    paypal_order_id VARCHAR(255),
    amount DECIMAL(10, 2),
    currency VARCHAR(10),
    status ENUM('COMPLETED','PENDING'),
    payment_method VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(id)ON DELETE CASCADE,
    FOREIGN KEY (cart_id) REFERENCES Cart(id)ON DELETE CASCADE
);